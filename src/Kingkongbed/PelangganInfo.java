package Kingkongbed;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author greyhats13
 */
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.TableColumn;
import net.proteanit.sql.DbUtils;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.regex.*;

public class PelangganInfo extends javax.swing.JFrame {

    /**
     * Creates new form PelangganInfo
     */
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    public PelangganInfo() {
        initComponents();
        setTitle("Data Kingkong Bed");
        conn = javaconnect.ConnecrDB();
        perbaruiTabelPelanggan();
        perbaruiTabelKasur();
        perbaruiTabelTransaksi();
        tglSekarang();
        submitTransaksi.setEnabled(true);
        formatTransaksi.setEnabled(false);
        deleteTransaksi.setEnabled(false);
        updatePelanggan.setEnabled(false);
        deletePelanggan.setEnabled(false);
        formatPelanggan.setEnabled(false);
        updateKasur.setEnabled(false);
        deleteKasur.setEnabled(false);
        formatKasur.setEnabled(false);
    }

    public boolean isNumber(String str) {
        String regex = "\\d*";
        Pattern pattern = Pattern.compile(regex);
        return pattern.matcher(str).matches();

    }

    public final void tglSekarang() {
        Calendar kal = new GregorianCalendar();
        int bulan = kal.get(Calendar.MONTH);
        int tahun = kal.get(Calendar.YEAR);
        int hari = kal.get(Calendar.DAY_OF_MONTH);
        tanggal.setText(tahun + "/" + (bulan + 1) + "/" + hari);
    }

    private void perbaruiTabelPelanggan() {
        try {
            String sql = "select * from pelanggan";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            tabelPelanggan.setModel(DbUtils.resultSetToTableModel(rs));
            String[] namaKolom = {"ID", "Nama", "No.Telp", "Alamat"};
            for (int i = 0; i < namaKolom.length; i++) {
                TableColumn tc = tabelPelanggan.getColumnModel().getColumn(i);
                tc.setHeaderValue(namaKolom[i]);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void perbaruiTabelKasur() {
        try {
            String sql = "select * from kasur";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            tabelKasur.setModel(DbUtils.resultSetToTableModel(rs));
            String[] namaKolom = {"Kode", "Merk", "Jenis", "Harga"};
            for (int i = 0; i < namaKolom.length; i++) {
                TableColumn tc = tabelKasur.getColumnModel().getColumn(i);
                tc.setHeaderValue(namaKolom[i]);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void perbaruiTabelTransaksi() {
        try {
            String sql = "select * from DataTransaksi";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            tabelTransaksi.setModel(DbUtils.resultSetToTableModel(rs));
            String[] namaKolom = {"ID Pelanggan", "Kode Kasur", "Tanggal Beli", "Jumlah Order", "Total Harga"};
            for (int i = 0; i < namaKolom.length; i++) {
                TableColumn tc = tabelTransaksi.getColumnModel().getColumn(i);
                tc.setHeaderValue(namaKolom[i]);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void perbaruiTabelAdmin() {
        try {
            String sql = "select * from admin";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            tabelKasur.setModel(DbUtils.resultSetToTableModel(rs));
            String[] namaKolom = {"Kode", "Merk", "Jenis", "Harga"};
            for (int i = 0; i < namaKolom.length; i++) {
                TableColumn tc = tabelKasur.getColumnModel().getColumn(i);
                tc.setHeaderValue(namaKolom[i]);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPelanggan = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelKasur = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        idPelanggan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        namaPelanggan = new javax.swing.JTextField();
        telpPelanggan = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        alamatPelanggan = new javax.swing.JTextArea();
        deletePelanggan = new javax.swing.JButton();
        insertPelanggan = new javax.swing.JButton();
        resetPelanggan = new javax.swing.JButton();
        updatePelanggan = new javax.swing.JButton();
        formatPelanggan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        deleteKasur = new javax.swing.JButton();
        insertKasur = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        kodeKasur = new javax.swing.JTextField();
        merkKasur = new javax.swing.JTextField();
        jenisKasur = new javax.swing.JTextField();
        hargaKasur = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        updateKasur = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        resetKasur = new javax.swing.JButton();
        formatKasur = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jmlBeli = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        submitTransaksi = new javax.swing.JButton();
        resetTransaksi = new javax.swing.JButton();
        deleteTransaksi = new javax.swing.JButton();
        tglPilih = new com.toedter.calendar.JDateChooser();
        fKey1 = new javax.swing.JTextField();
        fKey2 = new javax.swing.JTextField();
        totBayar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        formatTransaksi = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tanggal = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        tabelPelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelPelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPelangganMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPelanggan);

        jTabbedPane1.addTab("Data Pelanggan", jScrollPane1);

        tabelKasur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelKasur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelKasurMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelKasur);

        jTabbedPane1.addTab("Data Kasur", jScrollPane2);

        tabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelTransaksiMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelTransaksi);

        jTabbedPane1.addTab("Data Transaksi", jScrollPane4);

        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        jLabel2.setText("ID");

        idPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idPelangganKeyPressed(evt);
            }
        });

        jLabel3.setText("Nama");

        jLabel4.setText("NoTelp");

        jLabel5.setText("Alamat");

        namaPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                namaPelangganKeyPressed(evt);
            }
        });

        telpPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                telpPelangganKeyPressed(evt);
            }
        });

        alamatPelanggan.setColumns(20);
        alamatPelanggan.setRows(5);
        alamatPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                alamatPelangganKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(alamatPelanggan);

        deletePelanggan.setText("Hapus");
        deletePelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePelangganActionPerformed(evt);
            }
        });

        insertPelanggan.setText("Tambah");
        insertPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPelangganActionPerformed(evt);
            }
        });

        resetPelanggan.setText("Reset");
        resetPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPelangganActionPerformed(evt);
            }
        });

        updatePelanggan.setText("Update");
        updatePelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePelangganActionPerformed(evt);
            }
        });

        formatPelanggan.setForeground(new java.awt.Color(255, 0, 0));
        formatPelanggan.setText("Format Data Pelanggan");
        formatPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatPelangganActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(namaPelanggan, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .addComponent(idPelanggan)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(telpPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(insertPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updatePelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deletePelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formatPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(namaPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(telpPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deletePelanggan)
                        .addComponent(resetPelanggan)
                        .addComponent(updatePelanggan))
                    .addComponent(insertPelanggan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formatPelanggan)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Data Pelanggan", jPanel1);

        deleteKasur.setText("Delete");
        deleteKasur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteKasurActionPerformed(evt);
            }
        });

        insertKasur.setText("Insert");
        insertKasur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertKasurActionPerformed(evt);
            }
        });

        jLabel7.setText("Jenis");

        jLabel8.setText("Harga");

        kodeKasur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeKasurKeyPressed(evt);
            }
        });

        merkKasur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                merkKasurKeyPressed(evt);
            }
        });

        jenisKasur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jenisKasurKeyPressed(evt);
            }
        });

        hargaKasur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hargaKasurKeyPressed(evt);
            }
        });

        jLabel1.setText("Kode");

        updateKasur.setText("Update");
        updateKasur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateKasurActionPerformed(evt);
            }
        });

        jLabel6.setText("Merk");

        resetKasur.setText("Reset");
        resetKasur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetKasurActionPerformed(evt);
            }
        });

        formatKasur.setForeground(new java.awt.Color(204, 0, 0));
        formatKasur.setText("Format Data Kasur");
        formatKasur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatKasurActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jenisKasur)
                            .addComponent(merkKasur)
                            .addComponent(hargaKasur)
                            .addComponent(kodeKasur)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formatKasur, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(insertKasur, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(resetKasur)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateKasur, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteKasur, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kodeKasur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(merkKasur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jenisKasur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(hargaKasur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteKasur)
                    .addComponent(updateKasur)
                    .addComponent(resetKasur)
                    .addComponent(insertKasur))
                .addGap(7, 7, 7)
                .addComponent(formatKasur)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Data Kasur", jPanel2);

        jPanel3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel3KeyPressed(evt);
            }
        });

        jLabel12.setText("KodeKasur  :");

        jLabel14.setText("Jumlah Beli    :");

        jmlBeli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jmlBeliKeyPressed(evt);
            }
        });

        jLabel15.setText("Total Bayar     :");

        jLabel17.setText("Tanggal          :");

        submitTransaksi.setText("Submit");
        submitTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitTransaksiActionPerformed(evt);
            }
        });

        resetTransaksi.setText("Reset");
        resetTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetTransaksiActionPerformed(evt);
            }
        });

        deleteTransaksi.setText("Delete");
        deleteTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTransaksiActionPerformed(evt);
            }
        });

        fKey1.setForeground(new java.awt.Color(255, 0, 0));
        fKey1.setText("Klik Tabel Pelanggan!");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, fKey1, org.jdesktop.beansbinding.ELProperty.create("${editable}false"), fKey1, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        fKey2.setForeground(new java.awt.Color(255, 0, 0));
        fKey2.setText("Klik Tabel Kasurl!");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, fKey2, org.jdesktop.beansbinding.ELProperty.create("${editable}false"), fKey2, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        totBayar.setForeground(new java.awt.Color(255, 0, 0));
        totBayar.setText("Klik Submit!");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, totBayar, org.jdesktop.beansbinding.ELProperty.create("${editable}false"), totBayar, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        jLabel11.setText("ID Pelanggan :");

        formatTransaksi.setForeground(new java.awt.Color(204, 0, 0));
        formatTransaksi.setText("Format Data Transaksi");
        formatTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatTransaksiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jmlBeli, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tglPilih, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fKey2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fKey1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(totBayar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(169, 169, 169))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(formatTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(submitTransaksi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetTransaksi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteTransaksi)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(fKey1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fKey2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tglPilih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jmlBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitTransaksi)
                    .addComponent(resetTransaksi)
                    .addComponent(deleteTransaksi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formatTransaksi)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Transaksi", jPanel3);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setText("ADMINISTRATOR");

        jButton7.setText("Logout");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton1.setText("Tutup");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tanggal.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        tanggal.setForeground(new java.awt.Color(204, 0, 0));
        tanggal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton2.setText("Add Admin");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(jButton7)
                        .addGap(10, 10, 10)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(354, 354, 354))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        bindingGroup.bind();

        setSize(new java.awt.Dimension(859, 491));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updatePelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePelangganActionPerformed
        if (isNumber(telpPelanggan.getText())) {
            String value1 = idPelanggan.getText();
            String value2 = namaPelanggan.getText();
            String value3 = telpPelanggan.getText();
            String value4 = alamatPelanggan.getText();
            String sql = "update pelanggan set idPelanggan='" + value1 + "' ,nama='" + value2 + "', noTelp='" + value3 + "', Alamat='" + value4 + "' where idPelanggan='" + value1 + "' ";
            try {
                pst = conn.prepareStatement(sql);
                pst.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            perbaruiTabelPelanggan();
        } else {
            JOptionPane.showMessageDialog(null, "Nomor telepon harus angka!");
        }
    }//GEN-LAST:event_updatePelangganActionPerformed

    private void tabelPelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPelangganMouseClicked
        // TODO add your handling code here:
        idPelanggan.setEditable(false);
        insertPelanggan.setEnabled(false);
        formatPelanggan.setEnabled(false);
        updatePelanggan.setEnabled(true);
        deletePelanggan.setEnabled(true);
        try {
            int row = tabelPelanggan.getSelectedRow();
            String Tabelklik = tabelPelanggan.getModel().getValueAt(row, 0).toString();
            fKey1.setForeground(Color.green);
            fKey1.setText(Tabelklik);
            String sql = "select * from pelanggan where idPelanggan ='" + Tabelklik + "' ";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                String tambah1 = rs.getString("idPelanggan");
                String tambah2 = rs.getString("nama");
                String tambah3 = rs.getString("noTelp");
                String tambah4 = rs.getString("alamat");
                idPelanggan.setText(tambah1);
                namaPelanggan.setText(tambah2);
                telpPelanggan.setText(tambah3);
                alamatPelanggan.setText(tambah4);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tabelPelangganMouseClicked

    private void insertPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPelangganActionPerformed
        // TODO add your handling code here:
        String sql = "insert into pelanggan (idPelanggan,nama,noTelp,alamat) values (?,?,?,?)";
        try {
            if (idPelanggan.getText().isEmpty() || namaPelanggan.getText().isEmpty() || telpPelanggan.getText().isEmpty() || alamatPelanggan.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
            } else if (isNumber(idPelanggan.getText())) {
                if (isNumber(telpPelanggan.getText())) {
                    pst = conn.prepareStatement(sql);
                    pst.setString(1, idPelanggan.getText());
                    pst.setString(2, namaPelanggan.getText());
                    pst.setString(3, telpPelanggan.getText());
                    pst.setString(4, alamatPelanggan.getText());
                    pst.executeUpdate();
                } else {
                    JOptionPane.showMessageDialog(null, "No. Telp harus digit!");
                    telpPelanggan.setText("");
                    telpPelanggan.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "ID harus digit!");
            }
        } catch (SQLException | HeadlessException e) {
            String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: pelanggan.idPelanggan)";
            if (e.toString().equals(msg)) {
                JOptionPane.showMessageDialog(null, "ID Pelanggan telah ada");
                idPelanggan.setText("");
            } else {
                JOptionPane.showMessageDialog(null, e);
                idPelanggan.setText("");
            }
        }
        perbaruiTabelPelanggan();
    }//GEN-LAST:event_insertPelangganActionPerformed

    private void tabelKasurMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKasurMouseClicked
        // TODO add your handling code here:
        insertKasur.setEnabled(false);
        formatKasur.setEnabled(false);
        kodeKasur.setEditable(false);
        updateKasur.setEnabled(true);
        deleteKasur.setEnabled(true);
        try {
            int row = tabelKasur.getSelectedRow();
            String Tabelklik = tabelKasur.getModel().getValueAt(row, 0).toString();
            fKey2.setForeground(Color.green);
            fKey2.setText(Tabelklik);
            String sql = "select * from kasur where kodeKasur ='" + Tabelklik + "' ";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                String tambah1 = rs.getString("kodeKasur");
                String tambah2 = rs.getString("jenisKasur");
                String tambah3 = rs.getString("merkKasur");
                Long harga = rs.getLong("Harga");
                String tambah4 = harga.toString();
                kodeKasur.setText(tambah1);
                jenisKasur.setText(tambah2);
                merkKasur.setText(tambah3);
                hargaKasur.setText(tambah4);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tabelKasurMouseClicked

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void deletePelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePelangganActionPerformed
        // TODO add your handling code here
        String sql = "delete from pelanggan where idPelanggan=?";
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1, idPelanggan.getText());
            pst.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        perbaruiTabelPelanggan();
    }//GEN-LAST:event_deletePelangganActionPerformed

    private void insertKasurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertKasurActionPerformed
        // TODO add your handling code here:
        String sql = "insert into kasur (kodeKasur,jenisKasur,merkKasur,Harga) values (?,?,?,?)";
        try {
            if (isNumber(kodeKasur.getText())) {
                if (isNumber(hargaKasur.getText())) {
                    pst = conn.prepareStatement(sql);
                    pst.setString(1, kodeKasur.getText());
                    pst.setString(2, jenisKasur.getText());
                    pst.setString(3, merkKasur.getText());
                    pst.setString(4, hargaKasur.getText());
                    pst.executeUpdate();
                } else {
                    JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                    hargaKasur.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Kode Kasur harus digit");
                kodeKasur.setText("");
            }
        } catch (Exception e) {
            String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: kasur.kodeKasur)";
            if (e.toString().equals(msg)) {
                JOptionPane.showMessageDialog(null, "Kode Kasur telah ada");
                kodeKasur.setText("");
            } else {
                JOptionPane.showMessageDialog(null, e);
                kodeKasur.setText("");
            }
        }
        perbaruiTabelKasur();
    }//GEN-LAST:event_insertKasurActionPerformed

    private void deleteKasurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteKasurActionPerformed
        // TODO add your handling code here:
        String sql = "delete from kasur where kodeKasur=?";
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1, kodeKasur.getText());
            pst.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        perbaruiTabelKasur();
    }//GEN-LAST:event_deleteKasurActionPerformed

    private void updateKasurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateKasurActionPerformed
        // TODO add your handling code here:
        if (isNumber(kodeKasur.getText())) {
            if (isNumber(hargaKasur.getText())) {
                String value1 = kodeKasur.getText();
                String value2 = jenisKasur.getText();
                String value3 = merkKasur.getText();
                String temp = hargaKasur.getText();
                Long value4 = Long.parseLong(temp);
                String sql = "update kasur set kodeKasur='" + value1 + "' ,jenisKasur='" + value2 + "', merkKasur='" + value3 + "', Harga='" + value4 + "' where kodeKasur='" + value1 + "' ";
                try {
                    pst = conn.prepareStatement(sql);
                    pst.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                perbaruiTabelKasur();
            } else {
                JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                hargaKasur.setText("");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Kode kasur harus angka!");
            kodeKasur.setText("");
        }
    }//GEN-LAST:event_updateKasurActionPerformed

    private void resetKasurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetKasurActionPerformed
        // TODO add your handling code here:
        insertKasur.setEnabled(true);
        updateKasur.setEnabled(false);
        deleteKasur.setEnabled(false);
        formatKasur.setEnabled(true);
        kodeKasur.setEditable(true);
        kodeKasur.setText("");
        jenisKasur.setText("");
        merkKasur.setText("");
        hargaKasur.setText("");
    }//GEN-LAST:event_resetKasurActionPerformed

    private void resetPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPelangganActionPerformed
        // TODO add your handling code here:
        updatePelanggan.setEnabled(false);
        deletePelanggan.setEnabled(false);
        idPelanggan.setEditable(true);
        formatPelanggan.setEnabled(true);
        insertPelanggan.setEnabled(true);
        idPelanggan.setText("");
        namaPelanggan.setText("");
        telpPelanggan.setText("");
        alamatPelanggan.setText("");
    }//GEN-LAST:event_resetPelangganActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try {
            dispose();
            loginJFrame ljf = new loginJFrame();
            ljf.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            rs.close();
            pst.close();
            conn.close();
            System.exit(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void submitTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitTransaksiActionPerformed
        // TODO add your handling code here:
        String str1 = fKey1.getText();
        String str2 = fKey2.getText();
        String str3 = ((JTextField) tglPilih.getDateEditor().getUiComponent()).getText();
        String str4 = jmlBeli.getText();

        try {
            if (str1.equals("klik tabel Pelanggan!") || str2.equals("Klik Tabel Kasur!") || str3.equals("") || str4.equals("")) {
                JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
            } else if (isNumber(jmlBeli.getText())) {

                int jumlah = Integer.parseInt(jmlBeli.getText());
                String sql1 = "select * from kasur where kodeKasur ='" + fKey2.getText() + "' ";
                pst = conn.prepareStatement(sql1);
                rs = pst.executeQuery();
                Long price = rs.getLong("Harga") * jumlah;
                totBayar.setForeground(Color.green);
                totBayar.setText("Rp." + price.toString());
                String sql = "insert into DataTransaksi (idPelanggan,kodeKasur,tglBeli,jumlahBeli,totHarga) values (?,?,?,?,?)";
                pst = conn.prepareStatement(sql);
                pst.setString(1, fKey1.getText());
                pst.setString(2, fKey2.getText());
                pst.setString(3, ((JTextField) tglPilih.getDateEditor().getUiComponent()).getText());
                pst.setInt(4, Integer.parseInt(jmlBeli.getText()));
                pst.setLong(5, price);
                pst.executeUpdate();
            } else {
                JOptionPane.showMessageDialog(null, "Jumlah Beli harus angka");
                jmlBeli.setText("");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        perbaruiTabelTransaksi();
    }//GEN-LAST:event_submitTransaksiActionPerformed

    private void resetTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetTransaksiActionPerformed
        // TODO add your handling code here:
        submitTransaksi.setEnabled(true);
        formatTransaksi.setEnabled(true);
        deleteTransaksi.setEnabled(false);
        jmlBeli.setText("");
        ((JTextField) tglPilih.getDateEditor().getUiComponent()).setText("");
        fKey1.setForeground(Color.RED);
        fKey1.setText("Klik Tabel Pelanggan!");
        fKey2.setForeground(Color.RED);
        fKey2.setText("Klik Tabel Kasur!");
        totBayar.setForeground(Color.RED);
        totBayar.setText("Klik Submit!");
    }//GEN-LAST:event_resetTransaksiActionPerformed

    private void tabelTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelTransaksiMouseClicked
        // TODO add your handling code here:
        submitTransaksi.setEnabled(false);
        formatTransaksi.setEnabled(false);
        deleteTransaksi.setEnabled(true);
        try {
            int row = tabelTransaksi.getSelectedRow();
            String Tabelklik = tabelTransaksi.getModel().getValueAt(row, 0).toString();

            String sql = "select * from DataTransaksi where idPelanggan ='" + Tabelklik + "' ";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                String tambah1 = rs.getString("idPelanggan");
                String tambah2 = rs.getString("kodeKasur");
                String tambah3 = rs.getString("tglBeli");
                Integer temp = rs.getInt("jumlahBeli");
                String tambah4 = temp.toString();
                Long temp2 = rs.getLong("totHarga");
                String tambah5 = temp2.toString();
                fKey1.setText(tambah1);
                fKey2.setText(tambah2);
                ((JTextField) tglPilih.getDateEditor().getUiComponent()).setText(tambah3);
                jmlBeli.setText(tambah4);
                totBayar.setText(tambah5);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tabelTransaksiMouseClicked

    private void deleteTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTransaksiActionPerformed
        // TODO add your handling code here:
        String sql = "delete from DataTransaksi where idPelanggan=? and kodeKasur=? ";
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1, fKey1.getText());
            pst.setString(2, fKey2.getText());
            pst.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        perbaruiTabelTransaksi();
    }//GEN-LAST:event_deleteTransaksiActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            AdminForm af = new AdminForm();
            af.setVisible(true);
            dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void alamatPelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alamatPelangganKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && idPelanggan.isEditable()) {
            String sql = "insert into pelanggan (idPelanggan,nama,noTelp,alamat) values (?,?,?,?)";
            try {
                if (idPelanggan.getText().isEmpty() || namaPelanggan.getText().isEmpty() || telpPelanggan.getText().isEmpty() || alamatPelanggan.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
                } else if (isNumber(idPelanggan.getText())) {
                    if (isNumber(telpPelanggan.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, idPelanggan.getText());
                        pst.setString(2, namaPelanggan.getText());
                        pst.setString(3, telpPelanggan.getText());
                        pst.setString(4, alamatPelanggan.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "No. Telp harus digit!");
                        telpPelanggan.setText("");
                        telpPelanggan.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "ID harus digit!");
                }
            } catch (SQLException | HeadlessException e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: pelanggan.idPelanggan)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "ID Pelanggan telah ada");
                    idPelanggan.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    idPelanggan.setText("");
                }
            }
            perbaruiTabelPelanggan();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && !idPelanggan.isEditable()) {
            if (isNumber(telpPelanggan.getText())) {
                String value1 = idPelanggan.getText();
                String value2 = namaPelanggan.getText();
                String value3 = telpPelanggan.getText();
                String value4 = alamatPelanggan.getText();
                String sql = "update pelanggan set idPelanggan='" + value1 + "' ,nama='" + value2 + "', noTelp='" + value3 + "', Alamat='" + value4 + "' where idPelanggan='" + value1 + "' ";
                try {
                    pst = conn.prepareStatement(sql);
                    pst.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                perbaruiTabelPelanggan();
            } else {
                JOptionPane.showMessageDialog(null, "Nomor telepon harus angka!");
            }
        }
    }//GEN-LAST:event_alamatPelangganKeyPressed

    private void idPelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idPelangganKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && idPelanggan.isEditable()) {
            String sql = "insert into pelanggan (idPelanggan,nama,noTelp,alamat) values (?,?,?,?)";
            try {
                if (idPelanggan.getText().isEmpty() || namaPelanggan.getText().isEmpty() || telpPelanggan.getText().isEmpty() || alamatPelanggan.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
                } else if (isNumber(idPelanggan.getText())) {
                    if (isNumber(telpPelanggan.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, idPelanggan.getText());
                        pst.setString(2, namaPelanggan.getText());
                        pst.setString(3, telpPelanggan.getText());
                        pst.setString(4, alamatPelanggan.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "No. Telp harus digit!");
                        telpPelanggan.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "ID harus digit!");
                }
            } catch (SQLException | HeadlessException e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: pelanggan.idPelanggan)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "ID Pelanggan telah ada");
                    idPelanggan.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    idPelanggan.setText("");
                }
            }
            perbaruiTabelPelanggan();
        }
    }//GEN-LAST:event_idPelangganKeyPressed

    private void namaPelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaPelangganKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && idPelanggan.isEditable()) {
            String sql = "insert into pelanggan (idPelanggan,nama,noTelp,alamat) values (?,?,?,?)";
            try {
                if (idPelanggan.getText().isEmpty() || namaPelanggan.getText().isEmpty() || telpPelanggan.getText().isEmpty() || alamatPelanggan.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
                } else if (isNumber(idPelanggan.getText())) {
                    if (isNumber(telpPelanggan.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, idPelanggan.getText());
                        pst.setString(2, namaPelanggan.getText());
                        pst.setString(3, telpPelanggan.getText());
                        pst.setString(4, alamatPelanggan.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "No. Telp harus digit!");
                        telpPelanggan.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "ID harus digit!");
                }
            } catch (SQLException | HeadlessException e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: pelanggan.idPelanggan)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "ID Pelanggan telah ada");
                    idPelanggan.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    idPelanggan.setText("");
                }
            }
            perbaruiTabelPelanggan();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && !idPelanggan.isEditable()) {
            if (isNumber(telpPelanggan.getText())) {
                String value1 = idPelanggan.getText();
                String value2 = namaPelanggan.getText();
                String value3 = telpPelanggan.getText();
                String value4 = alamatPelanggan.getText();
                String sql = "update pelanggan set idPelanggan='" + value1 + "' ,nama='" + value2 + "', noTelp='" + value3 + "', Alamat='" + value4 + "' where idPelanggan='" + value1 + "' ";
                try {
                    pst = conn.prepareStatement(sql);
                    pst.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                perbaruiTabelPelanggan();
            } else {
                JOptionPane.showMessageDialog(null, "Nomor telepon harus angka!");
            }
        }
    }//GEN-LAST:event_namaPelangganKeyPressed

    private void telpPelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telpPelangganKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && idPelanggan.isEditable()) {
            String sql = "insert into pelanggan (idPelanggan,nama,noTelp,alamat) values (?,?,?,?)";
            try {
                if (idPelanggan.getText().isEmpty() || namaPelanggan.getText().isEmpty() || telpPelanggan.getText().isEmpty() || alamatPelanggan.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
                } else if (isNumber(idPelanggan.getText())) {
                    if (isNumber(telpPelanggan.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, idPelanggan.getText());
                        pst.setString(2, namaPelanggan.getText());
                        pst.setString(3, telpPelanggan.getText());
                        pst.setString(4, alamatPelanggan.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "No. Telp harus digit!");
                        telpPelanggan.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "ID harus digit!");
                }
            } catch (SQLException | HeadlessException e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: pelanggan.idPelanggan)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "ID Pelanggan telah ada");
                    idPelanggan.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    idPelanggan.setText("");
                }
            }
            perbaruiTabelPelanggan();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && !idPelanggan.isEditable()) {
            if (isNumber(telpPelanggan.getText())) {
                String value1 = idPelanggan.getText();
                String value2 = namaPelanggan.getText();
                String value3 = telpPelanggan.getText();
                String value4 = alamatPelanggan.getText();
                String sql = "update pelanggan set idPelanggan='" + value1 + "' ,nama='" + value2 + "', noTelp='" + value3 + "', Alamat='" + value4 + "' where idPelanggan='" + value1 + "' ";
                try {
                    pst = conn.prepareStatement(sql);
                    pst.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                perbaruiTabelPelanggan();
            } else {
                JOptionPane.showMessageDialog(null, "Nomor telepon harus angka!");
            }
        }
    }//GEN-LAST:event_telpPelangganKeyPressed

    private void kodeKasurKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeKasurKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && kodeKasur.isEditable()) {
            String sql = "insert into kasur (kodeKasur,jenisKasur,merkKasur,Harga) values (?,?,?,?)";
            try {
                if (isNumber(kodeKasur.getText())) {
                    if (isNumber(hargaKasur.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, kodeKasur.getText());
                        pst.setString(2, jenisKasur.getText());
                        pst.setString(3, merkKasur.getText());
                        pst.setString(4, hargaKasur.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                        hargaKasur.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Kode Kasur harus digit");
                    kodeKasur.setText("");
                }
            } catch (Exception e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: kasur.kodeKasur)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "Kode Kasur telah ada");
                    kodeKasur.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    kodeKasur.setText("");
                }
            }
            perbaruiTabelKasur();
        }
    }//GEN-LAST:event_kodeKasurKeyPressed

    private void jmlBeliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jmlBeliKeyPressed

    }//GEN-LAST:event_jmlBeliKeyPressed

    private void merkKasurKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_merkKasurKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && kodeKasur.isEditable()) {
            String sql = "insert into kasur (kodeKasur,jenisKasur,merkKasur,Harga) values (?,?,?,?)";
            try {
                if (isNumber(kodeKasur.getText())) {
                    if (isNumber(hargaKasur.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, kodeKasur.getText());
                        pst.setString(2, jenisKasur.getText());
                        pst.setString(3, merkKasur.getText());
                        pst.setString(4, hargaKasur.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                        hargaKasur.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Kode Kasur harus digit");
                    kodeKasur.setText("");
                }
            } catch (Exception e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: kasur.kodeKasur)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "Kode Kasur telah ada");
                    kodeKasur.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    kodeKasur.setText("");
                }
            }
            perbaruiTabelKasur();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && !kodeKasur.isEditable()) {
            if (isNumber(kodeKasur.getText())) {
                if (isNumber(hargaKasur.getText())) {
                    String value1 = kodeKasur.getText();
                    String value2 = jenisKasur.getText();
                    String value3 = merkKasur.getText();
                    String temp = hargaKasur.getText();
                    Long value4 = Long.parseLong(temp);
                    String sql = "update kasur set kodeKasur='" + value1 + "' ,jenisKasur='" + value2 + "', merkKasur='" + value3 + "', Harga='" + value4 + "' where kodeKasur='" + value1 + "' ";
                    try {
                        pst = conn.prepareStatement(sql);
                        pst.executeUpdate();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                    perbaruiTabelKasur();
                } else {
                    JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                    hargaKasur.setText("");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Kode kasur harus angka!");
                kodeKasur.setText("");
            }
        }
    }//GEN-LAST:event_merkKasurKeyPressed

    private void jenisKasurKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jenisKasurKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && kodeKasur.isEditable()) {
            String sql = "insert into Kasur (kodeKasur,jenisKasur,merkKasur,Harga) values (?,?,?,?)";
            try {
                if (isNumber(kodeKasur.getText())) {
                    if (isNumber(hargaKasur.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, kodeKasur.getText());
                        pst.setString(2, jenisKasur.getText());
                        pst.setString(3, merkKasur.getText());
                        pst.setString(4, hargaKasur.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                        hargaKasur.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Kode Kasur harus digit");
                    kodeKasur.setText("");
                }
            } catch (Exception e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: kasur.kodeKasur)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "Kode Kasur telah ada");
                    kodeKasur.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    kodeKasur.setText("");
                }
            }
            perbaruiTabelKasur();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && !kodeKasur.isEditable()) {
            if (isNumber(kodeKasur.getText())) {
                if (isNumber(hargaKasur.getText())) {
                    String value1 = kodeKasur.getText();
                    String value2 = jenisKasur.getText();
                    String value3 = merkKasur.getText();
                    String temp = hargaKasur.getText();
                    Long value4 = Long.parseLong(temp);
                    String sql = "update kasur set kodeKasur='" + value1 + "' ,jenisKasur='" + value2 + "', merkKasur='" + value3 + "', Harga='" + value4 + "' where kodeKasur='" + value1 + "' ";
                    try {
                        pst = conn.prepareStatement(sql);
                        pst.executeUpdate();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                    perbaruiTabelKasur();
                } else {
                    JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                    hargaKasur.setText("");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Kode kasur harus angka!");
                kodeKasur.setText("");
            }
        }
    }//GEN-LAST:event_jenisKasurKeyPressed

    private void hargaKasurKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hargaKasurKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && kodeKasur.isEditable()) {
            String sql = "insert into kasur (kodeKasur,jenisKasur,merkKasur,Harga) values (?,?,?,?)";
            try {
                if (isNumber(kodeKasur.getText())) {
                    if (isNumber(hargaKasur.getText())) {
                        pst = conn.prepareStatement(sql);
                        pst.setString(1, kodeKasur.getText());
                        pst.setString(2, jenisKasur.getText());
                        pst.setString(3, merkKasur.getText());
                        pst.setString(4, hargaKasur.getText());
                        pst.executeUpdate();
                    } else {
                        JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                        hargaKasur.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Kode Kasur harus digit");
                    kodeKasur.setText("");
                }
            } catch (SQLException | HeadlessException e) {
                String msg = "java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (UNIQUE constraint failed: kasur.kodeKasur)";
                if (e.toString().equals(msg)) {
                    JOptionPane.showMessageDialog(null, "Kode Kasur telah ada");
                    kodeKasur.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, e);
                    kodeKasur.setText("");
                }
            }
            perbaruiTabelKasur();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && !kodeKasur.isEditable()) {
            if (isNumber(kodeKasur.getText())) {
                if (isNumber(hargaKasur.getText())) {
                    String value1 = kodeKasur.getText();
                    String value2 = jenisKasur.getText();
                    String value3 = merkKasur.getText();
                    String temp = hargaKasur.getText();
                    Long value4 = Long.parseLong(temp);
                    String sql = "update kasur set kodeKasur='" + value1 + "' ,jenisKasur='" + value2 + "', merkKasur='" + value3 + "', Harga='" + value4 + "' where kodeKasur='" + value1 + "' ";
                    try {
                        pst = conn.prepareStatement(sql);
                        pst.executeUpdate();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                    perbaruiTabelKasur();
                } else {
                    JOptionPane.showMessageDialog(null, "Harga kasur harus angka");
                    hargaKasur.setText("");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Kode kasur harus angka!");
                kodeKasur.setText("");
            }
        }
    }//GEN-LAST:event_hargaKasurKeyPressed

    private void jPanel3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String str1 = fKey1.getText();
            String str2 = fKey2.getText();
            String str3 = ((JTextField) tglPilih.getDateEditor().getUiComponent()).getText();
            String str4 = jmlBeli.getText();

            try {
                if (str1.equals("klik tabel Pelanggan!") || str2.equals("Klik Tabel Kasur!") || str3.equals("") || str4.equals("")) {
                    JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
                } else if (isNumber(jmlBeli.getText())) {

                    int jumlah = Integer.parseInt(jmlBeli.getText());
                    Long price = rs.getLong("Harga") * jumlah;
                    totBayar.setForeground(Color.green);
                    totBayar.setText("Rp." + price.toString());
                    String sql = "insert into DataTransaksi (idPelanggan,kodeKasur,tglBeli,jumlahBeli,totHarga) values (?,?,?,?,?)";
                    pst = conn.prepareStatement(sql);
                    pst.setString(1, fKey1.getText());
                    pst.setString(2, fKey2.getText());
                    pst.setString(3, ((JTextField) tglPilih.getDateEditor().getUiComponent()).getText());
                    pst.setInt(4, Integer.parseInt(jmlBeli.getText()));
                    pst.setLong(5, price);
                    pst.executeUpdate();
                } else {
                    JOptionPane.showMessageDialog(null, "Jumlah Beli harus angka");
                    jmlBeli.setText("");
                }

            } catch (HeadlessException | NumberFormatException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            perbaruiTabelTransaksi();
        }
    }//GEN-LAST:event_jPanel3KeyPressed

    private void formatPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatPelangganActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Anda yakin ingin memformat? ", "Format", JOptionPane.YES_NO_OPTION);
        String sql = "delete from pelanggan";
        if (confirm == 0) {
            try {
                pst = conn.prepareStatement(sql);
                pst.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            perbaruiTabelPelanggan();
        }
    }//GEN-LAST:event_formatPelangganActionPerformed

    private void formatKasurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatKasurActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Anda yakin ingin memformat? ", "Format", JOptionPane.YES_NO_OPTION);
        String sql = "delete from kasur";
        if (confirm == 0) {
            try {
                pst = conn.prepareStatement(sql);
                pst.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            perbaruiTabelKasur();
        }
    }//GEN-LAST:event_formatKasurActionPerformed

    private void formatTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatTransaksiActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Anda yakin ingin memformat? ", "Format", JOptionPane.YES_NO_OPTION);
        String sql = "delete from DataTransaksi";
        if (confirm == 0) {
            try {
                pst = conn.prepareStatement(sql);
                pst.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            perbaruiTabelTransaksi();
        }
    }//GEN-LAST:event_formatTransaksiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                /*if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }*/
                UIManager.setLookAndFeel("com.jtattoo.plaf.aero.AeroLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PelangganInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PelangganInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PelangganInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PelangganInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PelangganInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea alamatPelanggan;
    private javax.swing.JButton deleteKasur;
    private javax.swing.JButton deletePelanggan;
    private javax.swing.JButton deleteTransaksi;
    private javax.swing.JTextField fKey1;
    private javax.swing.JTextField fKey2;
    private javax.swing.JButton formatKasur;
    private javax.swing.JButton formatPelanggan;
    private javax.swing.JButton formatTransaksi;
    private javax.swing.JTextField hargaKasur;
    private javax.swing.JTextField idPelanggan;
    private javax.swing.JButton insertKasur;
    private javax.swing.JButton insertPelanggan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jenisKasur;
    private javax.swing.JTextField jmlBeli;
    private javax.swing.JTextField kodeKasur;
    private javax.swing.JTextField merkKasur;
    private javax.swing.JTextField namaPelanggan;
    private javax.swing.JButton resetKasur;
    private javax.swing.JButton resetPelanggan;
    private javax.swing.JButton resetTransaksi;
    private javax.swing.JButton submitTransaksi;
    private javax.swing.JTable tabelKasur;
    private javax.swing.JTable tabelPelanggan;
    private javax.swing.JTable tabelTransaksi;
    private javax.swing.JLabel tanggal;
    private javax.swing.JTextField telpPelanggan;
    private com.toedter.calendar.JDateChooser tglPilih;
    private javax.swing.JTextField totBayar;
    private javax.swing.JButton updateKasur;
    private javax.swing.JButton updatePelanggan;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
